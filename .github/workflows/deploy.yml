# .github/workflows/deploy.yml
name: CI/CD Pipeline for FastAPI with Docker on AWS Elastic Beanstalk

on:
  push:
    branches:
      - master  # Trigger this workflow on pushes to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from your repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building multi-platform images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to Amazon ECR (Elastic Container Registry) to store the Docker image
      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 4: Build and push the Docker image to ECR
      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: ecrrepo
          IMAGE_TAG: latest
        run: |
          # Create ECR repository if it doesn't exist
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || aws ecr create-repository --repository-name $ECR_REPOSITORY

          # Build and push the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
          ECR_IMAGE: ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/ecrrepo:latest
        run: |
          # Create a new application version in Elastic Beanstalk using the latest Docker image
          aws elasticbeanstalk create-application-version --application-name $EB_APP_NAME \
            --version-label $GITHUB_SHA --source-bundle S3Bucket=my-s3-bucket,S3Key=my-key \
            --region $AWS_REGION

          # Update the ElastAWSic Beanstalk environment to use the new version
          aws elasticbeanstalk update-environment --application-name $EB_APP_NAME \
            --environment-name $EB_ENV_NAME --version-label $GITHUB_SHA \
            --region $AWS_REGION
